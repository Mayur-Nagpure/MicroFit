
services:

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8181:8080"
    command: start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data  # persists data between container restarts
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fitness_user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Mayur@1234
    ports:
      - "5432:5432"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672" # RabbitMQ management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  servicereg:
    image: eurekaserver:latest
    build: ./eureka/eureka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8761:8761"
    networks:
      - app-network


  configserver:
    image: config-server:latest
    build: ./configserver/configserver
    environment:
      - SPRING_PROFILES_ACTIVE=native
    ports:
      - "8888:8080"
    depends_on:
      - mongodb
      - postgres
      - rabbitmq
      - servicereg
    networks:
      - app-network

  user-service:
    image: user-service:latest
    build: ./userservice/userservice

    ports:
      - "8081:8081"
    environment:
      - SPRING_CONFIG_NAME=user-service-docker
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8080
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres
      - servicereg
      - configserver
    networks:
      - app-network

  activity-service:
    image: activity-service:latest
    build: ./activityservice/activityservice
    ports:
      - "8082:8082"
    environment:
      - SPRING_CONFIG_NAME=activity-service-docker
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8080
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - rabbitmq
      - servicereg
      - configserver
    networks:
      - app-network

  ai-service:
    image: ai-service:latest
    build: ./aiservice/aiservice
    ports:
      - "8083:8083"
    environment:
      - SPRING_CONFIG_NAME=ai-service-docker
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8080
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - rabbitmq
      - servicereg
      - configserver
    networks:
      - app-network

  api-gateway:
    image: api-gateway:latest
    build: ./gateway/gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_CONFIG_NAME=api-gateway-docker
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8080
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - servicereg
      - configserver
    networks:
      - app-network

  fitness-frontend:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    build:
      context: ./fitness-app-frontend
      args:
        REACT_APP_API_BASE: http://api-gateway:8080/api

    ports:
      - "5173:80"
    depends_on:
      - api-gateway
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  keycloak_data:
  rabbitmq_data: